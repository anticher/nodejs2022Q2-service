version: '3.7'

services:
  main:
    container_name: main
    image: rest-service
    build:
      context: .
      target: development
    restart: always
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${PORT}:${PORT}
      - ${APP_PORT}:${APP_PORT}
    command: npm run start:dev
    env_file:
      - .env
    networks:
      - ${NETWORK_NAME}
    depends_on:
      - postgres
  postgres:
    container_name: postgres
    image: rest-database
    build: docker-files/db-docker-file
    restart: always
    networks:
      - ${NETWORK_NAME}
    env_file:
    - .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
  pgadmin:
    links:
    - postgres:postgres
    container_name: pgadmin
    image: rest-pgadmin
    build: docker-files/pgadmin-docker-file
    ports:
    - ${PGADMIN_PORT_1}:${PGADMIN_PORT_2}
    volumes:
    - pgadmin:/root/.pgadmin
    env_file:
    - .env
    networks:
    - ${NETWORK_NAME}
networks:
  webnet:
    name: ${NETWORK_NAME}
    driver: bridge
volumes:
  pgdata:
  pgadmin:
